{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2e5c5d67.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n// Types\r\nimport { CartItemType } from '../App';\r\n// Styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n      <h3>${item.price}</h3>\r\n    </div>\r\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n\r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  .information,\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n  }\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n// Types\r\nimport { CartItemType } from '../App';\r\n// Styles\r\nimport { Wrapper } from './CartItem.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\r\n  <Wrapper>\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <div className='information'>\r\n        <p>Price: ${item.price}</p>\r\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n      </div>\r\n      <div className='buttons'>\r\n        <Button\r\n          size='small'\r\n          disableElevation\r\n          variant='contained'\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n          -\r\n        </Button>\r\n        <p>{item.amount}</p>\r\n        <Button\r\n          size='small'\r\n          disableElevation\r\n          variant='contained'\r\n          onClick={() => addToCart(item)}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n    </div>\r\n    <img src={item.image} alt={item.title} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  width: 500px;\r\n  padding: 20px;\r\n`;\r\n","import CartItem from '../CartItem/CartItem';\r\nimport { Wrapper } from './Cart.styles';\r\nimport { CartItemType } from '../App';\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\r\n      {cartItems.map(item => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n// Components\r\nimport Item from './Item/Item';\r\nimport Cart from './Cart/Cart';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n// Styles\r\nimport { Wrapper, StyledButton } from './App.styles';\r\n// Types\r\nexport type CartItemType = {\r\n  id: number;\r\n  category: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  title: string;\r\n  amount: number;\r\n};\r\n\r\nconst getProducts = async (): Promise<CartItemType[]> =>\r\n  await (await fetch('https://fakestoreapi.com/products')).json();\r\n\r\nconst App = () => {\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\r\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\r\n    'products',\r\n    getProducts\r\n  );\r\n  console.log(data);\r\n\r\n  const getTotalItems = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount, 0);\r\n\r\n  const handleAddToCart = (clickedItem: CartItemType) => {\r\n    setCartItems(prev => {\r\n      // 1. Is the item already added in the cart?\r\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\r\n\r\n      if (isItemInCart) {\r\n        return prev.map(item =>\r\n          item.id === clickedItem.id\r\n            ? { ...item, amount: item.amount + 1 }\r\n            : item\r\n        );\r\n      }\r\n      // First time the item is added\r\n      return [...prev, { ...clickedItem, amount: 1 }];\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (id: number) => {\r\n    setCartItems(prev =>\r\n      prev.reduce((ack, item) => {\r\n        if (item.id === id) {\r\n          if (item.amount === 1) return ack;\r\n          return [...ack, { ...item, amount: item.amount - 1 }];\r\n        } else {\r\n          return [...ack, item];\r\n        }\r\n      }, [] as CartItemType[])\r\n    );\r\n  };\r\n\r\n  if (isLoading) return <LinearProgress />;\r\n  if (error) return <div>Something went wrong ...</div>;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\r\n        <Cart\r\n          cartItems={cartItems}\r\n          addToCart={handleAddToCart}\r\n          removeFromCart={handleRemoveFromCart}\r\n        />\r\n      </Drawer>\r\n      <StyledButton onClick={() => setCartOpen(true)}>\r\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\r\n          <AddShoppingCartIcon />\r\n        </Badge>\r\n      </StyledButton>\r\n      <Grid container spacing={3}>\r\n        {data?.map(item => (\r\n          <Grid item key={item.id} xs={12} sm={4}>\r\n            <Item item={item} handleAddToCart={handleAddToCart} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <QueryClientProvider client={client}>\r\n    <App />\r\n  </QueryClientProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}